{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ListingComponent","this","columns","displayedColumns","datacolumns","displayedColumnsheader","dataSource","MatTableDataSource","Object","defineProperty","prototype","datasource","datasourceval","console","log","skip","skipval","modify_header_array","modify_header_arrayval","ngOnInit","x","temp","keys","coldef_list","header_list","i","length","push","replace","ff","b","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","map","unshift","data_list","createData","selection","SelectionModel","paginator","sort","isAllSelected","selected","data","masterToggle","_this","clear","forEach","select","checkboxLabel","isSelected","position","point","key","applyFilter","filterValue","filter","trim","toLowerCase","firstPage","styleCell","col_name","Component","selector","template","Input","ViewChild","MatSort","MatPaginator","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","ListingModule","declarations","imports","BrowserModule","BrowserAnimationsModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","import {Component, OnInit, ViewChild, Input} from '@angular/core';\nimport {MatSort, MatTableDataSource,MatPaginator} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit {\n\n  datasourceval:any;\n  skipval:any;\n  modify_header_arrayval:any;\n  selection :any;\n  columns :any=[];\n  public x :any;\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n    console.log('this.datasourceval');\n    console.log(this.datasourceval);\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n    console.log('this.skipval');\n    console.log(this.skipval);\n  }\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n    console.log('this.modify_header_arrayval');\n    console.log(this.modify_header_arrayval);\n  }\n\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  //dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit() {\n\n\n    this.x = this.datasourceval;\n    let x=this.x;\n\n    let temp = []\n    let keys = x[0]\n    temp = Object.keys(keys)\n\n    let coldef_list = [];\n    let header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, \"_\"));\n      header_list.push(temp[i])\n    }\n    //coldef_list.push('Actions');\n    //header_list.push('Actions')\n    console.log('coldef_list',coldef_list);\n    console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      let ff = `row.${coldef_list[i]}`\n      var tt = { columnDef: `${coldef_list[i]}`,    header: `${header_list[i].replace(/_/g,\" \")}`,  cell: (row) => eval(ff) ,objlength:header_list.length  };\n      console.log(tt.columnDef);\n      for (let b in this.modify_header_arrayval){\n        if(b==tt.header) tt.header=this.modify_header_arrayval[b];\n      }\n      if(this.skipval.indexOf(tt.columnDef)==-1)\n      this.columns.push(tt)\n    }\n    let displayedcols= this.columns.map(x => x.columnDef);\n    displayedcols.push('Actions');\n\n    this.displayedColumns =displayedcols;\n    this.displayedColumns.unshift('select');\n\n    let data_list = []\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point:any){\n    let data = {}\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, \"_\")] = point[key];\n    })\n    return data\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  styleCell(col_name,row){\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {}\n  }\n\n\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingComponent } from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n//import { ApiService } from './api.service';\n\n@NgModule({\n  declarations: [ListingComponent],\n  imports: [\n    BrowserModule,BrowserAnimationsModule,\n    DemoMaterialModule\n  ],\n  exports: [ListingComponent]\n})\nexport class ListingModule { }\n"]}