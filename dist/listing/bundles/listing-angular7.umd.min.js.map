{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","ViewChild","_authHttp","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_this","myControl","FormControl","columns","olddata","tsearch","tableflag","autosearch","limitcondval","result","sortdataval","sh","art","aud2","aud","color","mode","value","bufferValue","previewFlug","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","date_search_source_countval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","apiurlval","jwttoken","jwttokenval","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","inputblur","myForm","controls","markAsUntouched","ngOnInit","search","condition","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","unshift","data_list","createData","selection","SelectionModel","img_modal_view","img","open","ImageView","panelClass","height","alldata","onSubmit","errormg","markAsTouched","dateSearch","link1","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toLowerCase","conditionobj","assign","limit","sort","field","searchcondition","warn","results","count","selectSearch","paging","autosearchfunction","$or","toUpperCase","textsearchfunction","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","includes","getstatus","name","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","clickurl","window","isAllSelected","selected","masterToggle","clear","forEach","checkboxLabel","isSelected","point","key","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","n","v","entries","managestatus","BottomSheet","items","afterDismissed","status","c","error","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","c_1","deletemultiple","dialogRef","afterClosed","c_2","deletedata","editdata","navigate","sorttable","allSearch","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","Input","MatSort","MatPaginator","onNoClick","close","sanitizeUrl","rowdata","MatDialogRef","Inject","MAT_DIALOG_DATA","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","ListingModule","declarations","imports","CommonModule","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress:any=[];\n  public uploadtype;\n  public uploaderror:any='';\n  // public uploadOutputval:any;\n  fileservername:any=[];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n\n              ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    //console.log('this.domain');\n    //console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if(this.files[0]!=null && this.files[0].progress!=null)\n        this.percentageis = this.files[0].progress.data.percentage;\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if(this.files[0]!=null && this.files[0].progress!=null) {\n      if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n      this.inprogress=true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if(this.progress[arrayvalue]==100) {\n        this.progress[arrayvalue]=null;\n        this.inprogress=null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec=='single'){\n      // this.fileservername = [];\n      if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n      this.fileservername[arrayvalue]=[];\n      if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n      // if(this.files[0].response!=null){\n      if(this.files.length==1) {\n        if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror='';\n        }\n        if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n          this.uploaderror='error occured on uploading !!!';\n        }\n      }\n      if(this.files.length>1)\n      {\n        console.log('sdfdsf==== in multiple length ');\n        for(let b in this.files){\n          if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files=[];\n      }\n      //}\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    //this.uploaderservice.filenamevalc1=this.fileservername;\n    //UploaderComponent.filenamevalc1=87;\n    //console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);\n    var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n    return result;\n  }\npostSearch1( link,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': source.token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link\");\n    console.log(link);\n    var result = this._http.post(link, source).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint:any, data, id:any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);\n    let dataval:any;\n    dataval={source:source,id:data._id}\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n    togglestatus(endpoint:any, data,token,source) {\n      console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,data:data}\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,ids:data}\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n    togglestatusmany(endpoint:any, data,val,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,data:{ids:data,val:val}};\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n      return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from \"@angular/router\";\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { HttpClient } from \"@angular/common/http\";\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport {ThemePalette} from \"@angular/material/core\";\n//import {ProgressBarMode} from '@angular/material/progress-bar';\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  searchListval: any;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public limitcondval: any={};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if(this.date_search_source_countval==0) this.limitcondval.pagecount=1;\n    console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    console.log(this.sortdataval,'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    this.jwttokenval = jwttoken;\n    //console.log(this.jwttokenval)\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  //dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog, public bottomSheet: MatBottomSheet, public fb: FormBuilder, private router: Router, private resolver: ComponentFactoryResolver,\n              private container: ViewContainerRef, public _http: HttpClient, public sanitizer: DomSanitizer) {\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n\n\n\n  inputblur(val: any) {\n    //console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n      let source: any;\n      let condition: any = {};\n      source = {\n        source: this.date_search_sourceval,\n        condition: condition\n      };\n      let link = this.apiurlval + '' + this.date_search_endpointval;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        this.result = res;\n        this.preresult = this.result.res;\n      });\n\n    }\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n        .pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    let x = this.x;\n\n    let temp = []\n    let keys = x[0]\n    temp = Object.keys(keys)    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    let coldef_list = [];\n    let header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, \"_\"));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i])\n    }\n    //coldef_list.push('Actions');\n    //header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      let ff = `row.${coldef_list[i]}`\n      var tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i].replace(/_/g, \" \")}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (let b in this.modify_header_arrayval) {\n        if (b == tt.header) tt.header = this.modify_header_arrayval[b];\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1)\n        this.columns.push(tt);\n    }\n    let displayedcols = this.columns.map(x => x.columnDef);\n    displayedcols.push('Actions');\n\n    this.displayedColumns = displayedcols;\n    this.displayedColumns.unshift('select');        /*adds select column in table by unshift function*/\n\n    let data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    //this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n  }\n  /**image view modal */\n  img_modal_view(img:any){\n//console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      panelClass: 'custom-modalbox-image-preview',\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    let data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    let link = this.apiurlval + '' + this.datacollectionval;\n    let link1 = this.apiurlval + '' + this.datacollectionval+'-count';\n    let source: any;\n    let condition: any;\n    let textSearch:any={};\n    condition = {};\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if(this.end_date!=null && this.start_date!=null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      for(let i in this.tsearch){\n        textSearch[i]={$regex:this.tsearch[i].toLowerCase()};\n      }\n\n\n\n\n      let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n      source = {\n        \"condition\":{\n          limit:this.limitcondval.limit,\n          skip:0\n        },\n        sort:{\n          field:this.sortdataval.field,\n          type:this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      console.log('con...',conditionobj,this.end_date);\n      console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      //return;\n      this.date_search_source_countval=0;\n      this.loading=true;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.dataSource = new MatTableDataSource(result.results.res);\n        this.loading=false;\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n      })\n\n      this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if(result.count==0) this.tableflag=1;\n        console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        //this.dataSource.sort = this.sort;\n      })\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else\n      console.log(\"error\");\n  }\n\n\n\n  selectSearch(value: any, type: any) {\n    let link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    this.selectSearch_condition = {};\n    this.selectSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  paging(val:any){\n    if(val==1) {\n      this.limitcondval.skip=(this.limitcondval.pagecount)*this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if(val==-1 && this.limitcondval.skip>this.limitcondval.limit) {\n      this.limitcondval.skip=(this.limitcondval.pagecount-1)*this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if(val>1){\n      if(this.limitcondval.pagecount==1) this.limitcondval.skip=0;\n      else this.limitcondval.skip=(this.limitcondval.pagecount-1)*this.limitcondval.limit;\n      //this.limitcondval.pagecount--;\n\n    }\n    if(val==-1 && this.limitcondval.skip<this.limitcondval.limit) return;\n    console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    let textSearch:any={};\n\n\n    for(let i in this.tsearch){\n      textSearch[i]={$regex:this.tsearch[i].toLowerCase()};\n    }\n\n    let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    let source = {\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      },\n      sort:{\n        field:this.sortdataval.field,\n        type:this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    let link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      console.log(this.result,'res');\n      this.dataSource = new MatTableDataSource(this.result.results.res);\n      this.loading = false;\n      //this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n\n    });\n\n  }\n  autosearchfunction(value: any) {\n    let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n  textsearchfunction(value: any) {\n    let link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any = {};\n    let val='';\n    if(this.tsearch!=null && this.tsearch[value]!=null)\n    {\n      val= this.tsearch[value].toLowerCase();\n    }\n   \n    if (this.tsearch[value]!=null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    console.warn(this.tsearch);\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    //add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    //this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n\n    if (val.filteredData.length < this.olddata.length) {\n      let dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox',\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      let dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox',\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (let b in this.statusarrval) {\n      if (this.statusarrval[b].val == val)\n        return this.statusarrval[b].name;\n      // console.log(this.statusarrval[b].name);\n    }\n    return \"N/A\";\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    let fullurl = val + '' + row;\n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  clickurl(val: any, url: any) {\n    let link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, \"_blank\");\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    let data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, \"_\")] = point[key];\n    });\n    return data\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {}\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata:any){\n    //console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: 'custom-modalbox-videoplayer-preview',\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    let data2: any = [];\n\n    for (let key in data) {\n      let flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) data[key] = 'Yes';\n          if (data[key] == false) data[key] = 'No';\n        }\n        if (key == 'image') {\n          data[key + ':'] = \"<img mat-card-image src=\" + data[key] + \"><br/>\";\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          let tempdata: any = [];\n          for (let k in data[key]) {\n            for (let p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);\n                //console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push(\"<img mat-card-image src=\" + data[key][k] + \"><br/>\");\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push(\"<span>\" + data[key][k] + \"</span><br/>\");\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (var objk in data[key][k]) {\n                    tempdata.push(\"<span>\" + objk + \" : \" + data[key][k][objk] + \"</span><br/>\");\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (let n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (let v in this.detail_skip_arrayval) {\n      //data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox',\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    let bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this._apiService.togglestatus(this.apiurlval + 'statusupdate', data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in this.olddata) {\n              //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   //iframe url\n    for (let b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   //for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data: data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    let ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    //console.log('data');\n    //console.log(data);\n    let bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        //data.status = result.val;\n        //data.id = data._id;\n        let newstatus: any = result.val;\n        this._apiService.togglestatusmany(this.apiurlval + 'statusupdate', ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in this.olddata) {\n              //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      data: { message: 'Are you sure you want to delete the selected records?' }\n    });\n    let ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this._apiService.deteManyData(this.apiurlval + this.deleteendpointval, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (let c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n\n      }\n      //this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    //alert(5);\n    //this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      height: 'auto',\n      data: { message: 'Are you sure to delete this record ??' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id)\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n\n      }\n      //this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field:any,type:any){\n    this.sortdataval.field=field;\n    this.sortdataval.type=type;\n    this.allSearch();\n  }\n\n  allSearch(){\n    console.log(\"hit\");\n\n    let link = this.apiurlval + '' + this.datacollectionval;\n    let link1 = this.apiurlval + '' + this.datacollectionval+'-count';\n    let source: any;\n    let condition: any;\n    let textSearch:any={};\n    condition = {};\n    for(let i in this.tsearch){\n      textSearch[i]={$regex:this.tsearch[i].toLowerCase()};\n    }\n\n\n\n\n    let conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:0\n      },\n      sort:{\n        field:this.sortdataval.field,\n        type:this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    console.log('con...',conditionobj,this.end_date);\n    console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n    //return;\n    this.date_search_source_countval=0;\n    this.loading=true;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      this.dataSource = new MatTableDataSource(result.results.res);\n      this.loading=false;\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n    })\n\n    this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      this.date_search_source_countval = (result.count);\n      if(result.count==0) this.tableflag=1;\n      console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      //this.dataSource.sort = this.sort;\n    })\n\n  }\n\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    let link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    let data: any = { \"source\": \"blockchainuser_view\", \"condition\": { \"posts_id_object\": singleData._id }, \"token\": this.jwttokenval };\n    /******** not completed *****/\n    this._apiService.postData(link, data).subscribe(response => {\n      let restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: 'custom-modalbox-artistxp-preview',\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n      public dialogRef: MatDialogRef<Confirmdialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (let b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n      public dialogRef: MatDialogRef<VideoPlayer>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    //console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  constructor(\n      public dialogRef: MatDialogRef<ImageView>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    //console.warn('ImageViewModal',data.alldata);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id+'?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog,BottomSheet,VideoPlayer,ImageView} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from \"@angular/router\";\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\n\n\n@NgModule({\n  declarations: [ListingComponent,Confirmdialog,BottomSheet,YoutubeplayerComponent,VideoPlayer,ImageView],\n    imports: [\n        CommonModule,\n        BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n         RouterModule,\n        MomentModule\n        \n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  exports: [ListingComponent,\n      ],\n  providers: [ApiService],\n  entryComponents:[Confirmdialog,BottomSheet,VideoPlayer,ImageView],\n})\nexport class ListingModule {\n}\n"]}