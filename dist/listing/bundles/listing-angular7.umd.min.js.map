{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","_http","_authHttp","this","domain_for_fileupload_val","progress","uploaderror","fileservername","options","concurrency","maxUploads","files","uploadInput","EventEmitter","humanizeBytes","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","emit","file","response","push","console","log","lengthis","length","percentageis","percentage","index","findIndex","id","filter","dragOver","inprogress","error_code","b","isTokenExpired","getclientip","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","access-token","post","source","getData","postData","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","token","postSearch1","putData","Authorization","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","ViewChild","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","_this","myControl","FormControl","columns","olddata","tsearch","autosearch","result","sh","aud","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","apiurlval","jwttoken","jwttokenval","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","inputblur","myForm","controls","markAsUntouched","ngOnInit","search","condition","stateGroup","valueChanges","startWith","value","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","unshift","data_list","createData","selection","SelectionModel","paginator","sort","onSubmit","errormg","valid","markAsTouched","dateSearch","start_date","end_date","unix","Date","getTime","$lte","$gte","conditionobj","assign","selectSearch","field","autosearchfunction","$or","toLowerCase","toUpperCase","textsearchfunction","filterValue","option","includes","getstatus","name","hi","shatterblok_agreement_date","audiodeadline_agreement_date","clickurl","window","open","isAllSelected","selected","masterToggle","clear","forEach","select","checkboxLabel","isSelected","position","point","key","applyFilter","trim","firstPage","styleCell","col_name","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","imgval","fileurl","n","v","entries","Confirmdialog","height","panelClass","isconfirmation","managestatus","BottomSheet","items","afterDismissed","status","c","message","error","managestatusmultiple","newstatus_1","c_1","deletemultiple","dialogRef","afterClosed","c_2","deletedata","editdata","navigate","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","Input","MatSort","MatPaginator","onNoClick","close","MatDialogRef","Inject","MAT_DIALOG_DATA","bottomSheetRef","openLink","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","ListingModule","declarations","imports","CommonModule","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","MatFileUploadModule","NgxUploaderModule","RouterModule","MomentModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress:any=[];\n  public uploadtype;\n  public uploaderror:any='';\n  // public uploadOutputval:any;\n  fileservername:any=[];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n\n              ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    //console.log('this.domain');\n    //console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if(this.files[0]!=null && this.files[0].progress!=null)\n        this.percentageis = this.files[0].progress.data.percentage;\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if(this.files[0]!=null && this.files[0].progress!=null) {\n      if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n      this.inprogress=true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if(this.progress[arrayvalue]==100) {\n        this.progress[arrayvalue]=null;\n        this.inprogress=null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec=='single'){\n      // this.fileservername = [];\n      if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n      this.fileservername[arrayvalue]=[];\n      if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n      // if(this.files[0].response!=null){\n      if(this.files.length==1) {\n        if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror='';\n        }\n        if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n          this.uploaderror='error occured on uploading !!!';\n        }\n      }\n      if(this.files.length>1)\n      {\n        console.log('sdfdsf==== in multiple length ');\n        for(let b in this.files){\n          if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files=[];\n      }\n      //}\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    //this.uploaderservice.filenamevalc1=this.fileservername;\n    //UploaderComponent.filenamevalc1=87;\n    //console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'access-token': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'access-token': ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'access-token': ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint:any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);\n    var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n    return result;\n  }\npostSearch1( link,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': source.token\n      })\n    };\n    console.log('------ ');\n    console.log(\"link\");\n    console.log(link);\n    var result = this._http.post(link, source).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint:any, data, id:any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': ''\n      })\n    };\n    console.log('');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,id:data._id}\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n    togglestatus(endpoint:any, data,token,source) {\n      console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,data:data}\n    var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint:any, data,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,ids:data}\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n    togglestatusmany(endpoint:any, data,val,token,source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': token\n      })\n    };\n    console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    let dataval:any;\n    dataval={source:source,data:{ids:data,val:val}};\n    var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n      return '' + endpoint;\n  }\n\n}\n","import {Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef} from '@angular/core';\nimport {MatSort, MatTableDataSource,MatPaginator} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {MatBottomSheet, MatBottomSheetRef,MAT_BOTTOM_SHEET_DATA} from '@angular/material';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event} from \"@angular/router\";\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\nimport {HttpClient} from \"@angular/common/http\";\ndeclare var $:any;\nimport * as momentImported from 'moment';\nconst moment = momentImported;\n\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit {\n\n  myControl = new FormControl();\n\n\n  datasourceval:any;\n  search_settingsval:any;\n  click_to_add_ananother_pageval:any;\n  date_search_sourceval:any;\n  date_search_endpointval:any;\n  urlval:any;\n  searchendpointval:any;\n  searchListval:any;\n  pdf_link_val:any;\n  statusarrval:any;\n  skipval:any;\n  errormg:any;\n  jwttokenval:any;\n  detail_datatypeval:any;\n  detail_skip_arrayval:any;\n  deleteendpointval:any;\n  editrouteval:any;\n  apiurlval:any;\n  updateendpointval:any;\n  modify_header_arrayval:any;\n  selection :any;\n  sourcedataval :any;\n  emailarrayval :any;\n  columns :any=[];\n  olddata :any=[];\n  tsearch :any=[];\n  autosearch :any=[];\n  public x :any;\n  public result :any = {};\n  public sh :any = false;\n  public aud :any = false;\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    console.log('this.search_settingsval');\n    console.log(this.search_settingsval);\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n  /*  console.log(this.search_settingsval.selectsearch);\n    console.log(this.search_settingsval.selectsearch[0].label);\n    console.log(this.search_settingsval.selectsearch[0].values);\n    console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n    console.log('this.click_to_add_ananother_pageval');\n    console.log(this.click_to_add_ananother_pageval);\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n    console.log('this.date_search_sourceval');\n    console.log(this.date_search_sourceval);\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n    console.log('this.date_search_endpointval');\n    console.log(this.date_search_endpointval);\n  }\n   @Input()\n  set url(url: any) {\n    this.urlval = url;\n    console.log('this.urlval');\n    console.log(this.urlval);\n  }\n    @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n    console.log('this.searchendpointval');\n    console.log(this.searchendpointval);\n  }\n   @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n    console.log('this.pdf_link_val');\n    console.log(this.pdf_link_val);\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n    console.log('this.searchListval');\n    console.log(this.searchListval);\n  }\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n    console.log('this.datasourceval');\n    console.log(this.datasourceval);\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n    console.log('this.skipval');\n    console.log(this.skipval);\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n    console.log('this.detail_datatypeval');\n    console.log(this.detail_datatypeval);\n  }\n @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n    console.log('this.detail_skip_arrayval');\n    console.log(this.detail_skip_arrayval);\n  }\n\n@Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n    console.log('this.sourcedataval');\n    console.log(this.sourcedataval);\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n    console.log('this.modify_header_arrayval');\n    console.log(this.modify_header_arrayval);\n  }\n\n  @Input()\n    set deleteendpoint(deleteendpointval: any) {\n      this.deleteendpointval = deleteendpointval;\n      console.log('this.deleteendpointval');\n      console.log(this.deleteendpointval);\n    }\n\n @Input()\n    set updateendpoint(updateendpoint: any) {\n      this.updateendpointval = updateendpoint;\n      console.log('this.updateendpointval');\n      console.log(this.updateendpointval);\n    }\n    @Input()\n    set apiurl(apiurl: any) {\n      this.apiurlval = apiurl;\n      console.log('this.apiurlval');\n      console.log(this.apiurlval);\n    }\n\n@Input()\n    set jwttoken(jwttoken: any) {\n      this.jwttokenval = jwttoken;\n      console.log('this.jwttokenval');\n      console.log(this.jwttokenval);\n    }\n\n    @Input()\n    set statusarr(statusarr: any) {\n      this.statusarrval = statusarr;\n      console.log('this.statusarrval');\n      console.log(this.statusarrval);\n    }\n\n    @Input()\n    set emailarray(emailarray: any) {\n      this.emailarrayval = emailarray;\n      console.log('this.emailarrayval');\n      console.log(this.emailarrayval);\n    }\n\n  @Input()\n  set editroute(editroute: any) {\n    console.log('editroute');\n    console.log(editroute);\n    this.editrouteval = editroute;\n    console.log('this.editrouteval');\n    console.log(this.editrouteval);\n  }\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any ;\n  dateSearch_condition: any ={};\n  selectSearch_condition: any ={};\n  autoSearch_condition: any ={};\n  textSearch_condition: any ={};\n  end_date: any ;\n  public i: any ;\n  loading: any = false ;\n  public preresult: any={};\n  //dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm:any;\n  // myForm:any;\n\n  constructor(public _apiService: ApiService,public dialog: MatDialog,private bottomSheet: MatBottomSheet,public fb: FormBuilder,private router: Router, private resolver: ComponentFactoryResolver,\n              private container: ViewContainerRef, public _http: HttpClient) {\n\n    this.router.events.subscribe((event: Event) => {\n        switch (true) {\n          case event instanceof NavigationStart: {\n            this.loading = true;\n            break;\n          }\n          case event instanceof NavigationEnd:\n          case event instanceof NavigationCancel:\n          case event instanceof NavigationError: {\n            this.loading = false;\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      });\n\n\n\n   /* this.myForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n\n\n\n  inputblur(val:any){\n    console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    if (this.search_settingsval !=null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n      console.log('----------------');\n      let source: any;\n      let condition: any = {};\n      source = {\n        source: this.date_search_sourceval,\n        condition: condition\n      };\n      let link = this.apiurlval + '' + this.date_search_endpointval;\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        this.result = res;\n        console.log(this.result);\n        this.preresult = this.result.res;\n        console.log(this.preresult);\n      });\n\n    }\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n   /* this.stateGroupOptions = this.myControl.valueChanges\n        .pipe(\n            startWith(''),\n            map(value => this._filterGroup(value))\n        );*/\n\n    this.stateGroup = this.myControl.valueChanges\n        .pipe(\n            startWith(''),\n            map(value => this._filter(value))\n        );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    let x=this.x;\n\n    let temp = []\n    let keys = x[0]\n    temp = Object.keys(keys)\n\n    let coldef_list = [];\n    let header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, \"_\"));\n      header_list.push(temp[i])\n    }\n    //coldef_list.push('Actions');\n    //header_list.push('Actions')\n    console.log('coldef_list',coldef_list);\n    console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      let ff = `row.${coldef_list[i]}`\n      var tt = { columnDef: `${coldef_list[i]}`,    header: `${header_list[i].replace(/_/g,\" \")}`,  cell: (row) => eval(ff) ,objlength:header_list.length  };\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (let b in this.modify_header_arrayval){\n        if(b==tt.header) tt.header=this.modify_header_arrayval[b];\n      }\n\n      if(this.skipval.indexOf(tt.columnDef)==-1)\n      this.columns.push(tt);\n      // console.log('this.columns');\n      // console.log(this.columns);\n    }\n    let displayedcols= this.columns.map(x => x.columnDef);\n    displayedcols.push('Actions');\n\n    this.displayedColumns =displayedcols;\n    this.displayedColumns.unshift('select');\n\n    let data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata=data_list;\nconsole.log(data_list)\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    let data = this.myForm.value;\n    console.log('data');\n    console.log(data);\n    console.log(this.myForm.valid);\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    console.log(\"start date\");\n    console.log(this.start_date);\n    console.log(this.end_date);\n    let sd = moment(this.start_date).unix();\n    let ed = moment(this.end_date).unix();\n    console.log(moment(this.start_date).unix());\n    console.log(moment(this.end_date).unix());\n    console.log(new Date(this.end_date).getTime());\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    console.log(link);\n    if(moment(this.end_date).unix()!=null && moment(this.start_date).unix()!=null ) {\n\n\n      let source:any;\n      let condition: any;\n      condition = {};\n\n      condition[val] = {\n        $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n      };\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n      let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n          source= {\n            source: this.date_search_sourceval,\n            condition: conditionobj,\n          };\n      console.log(source);\n      this._apiService.postSearch(link,this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        let result: any = {};\n        result = res;\n        console.log(result.res);\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    }else\n      console.log(\"error\");\n  }\n\n\n\n  selectSearch (value:any,type:any){\n    console.log('type');\n    console.log(type);\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    console.log(link);\n    let source:any;\n    let condition: any;\n    condition = {};\n    condition[type.field]=value;\n    this.selectSearch_condition = {};\n    this.selectSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source= {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    if(value !=null ) {\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        let result: any = {};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else\n    {\n      console.log('oops');\n    }\n  console.log(\"error\");\n  }\n  autosearchfunction (value: any) {\n    console.log(value);\n    let val:any=this.autosearch[value];\n    console.log(val);\n    let source:any;\n    let condition: any={};\n    if(this.autosearch[value].length>0 && {$or:[this.autosearch[value].toLowerCase(),this.autosearch[value].toUpperCase(),this.autosearch[value]]})condition[value+'_regex']=val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source= {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      console.log(res);\n      // let result:any={};\n      this.result = res;\n      console.log(this.result);\n      console.log(this.result.res);\n      this.dataSource = new MatTableDataSource(this.result.res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    });\n  }\n\n  textsearchfunction (value:any){\n    console.log('value');\n    console.log(value);\n    console.log(value.toLowerCase());\n    console.log(this.tsearch[value]);\n    let link = this.apiurlval + ''+ this.date_search_endpointval;\n    console.log(link);\n    let source:any;\n    let condition: any={};\n    //condition = {};\n    let val:any =this.tsearch[value].toLowerCase();\n    // condition={$or:[this.tsearch[value].toLowerCase(),this.tsearch[value].toUpperCase()]};\n    if(this.tsearch[value].length>1 && {$or:[this.tsearch[value].toLowerCase(),this.tsearch[value].toUpperCase()]})condition[value+'_regex']=val;\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    //condition[value]=\"/222/\";\n    //condition={email:{$regx:'/222/i'}};\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source= {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    console.log('source');\n    console.log(source);\n    //add loader\n    this.loading = true;\n    if(value !=null  ) {\n      this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        console.log(res);\n        let result: any = {};\n        result = res;\n        //close loader\n        this.loading = false;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n    } else\n    {\n      console.log('oops');\n    }\n  console.log(\"error\");\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  /*private _filterGroup(value: string): StateGroup[] {\n   /!* if (value) {\n      return this.searchListval\n          .map(group => ({names: _filter(group.names, value)}))\n          .filter(group => group.names.length > 0);\n    }\n\n    return this.searchListval;*!/\n    const filterValue = value.toLowerCase();\n\n    return this.searchListval.filter(option => option.toLowerCase().includes(filterValue));\n  }*/\n\n  getstatus(val:any){\n    // console.log('val');\n    // console.log(val);\n    for(let b in this.statusarrval){\n      if(this.statusarrval[b].val==val)\n        return this.statusarrval[b].name;\n      // console.log(this.statusarrval[b].name);\n    }\n    return \"N/A\";\n  }\n  hi(val: any){\n    // console.log('val');\n    // console.log(val);\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date ==null ){\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date !=null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date ==null) {\n      this.sh = false;\n      this.aud = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n  clickurl(val: any , url: any) {\n    let i\n    console.log('ok');\n    console.log(val);\n    console.log(val._id);\n    /*for (i in this.urlval) {\n     if (this.urlval[i].val == val) {\n       return this.urlval[i].url;\n       // console.log( this.urlval[i].url);\n     }\n      console.log('jjj' + this.urlval[i].url);\n    }*/\n    /*if (val.status == 2){\n      console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    } else if (val.status == 3) {\n      this.sh = true;\n      this.aud = false;\n    } else {\n      this.sh = false;\n      this.aud = false;\n    }*/\n    console.log(url);\n    console.log(url + '' +val._id + '' + this.pdf_link_val);\n    let link= url + '' +val._id + '' + this.pdf_link_val;\n    window.open(link, \"_blank\");\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point:any){\n    let data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, \"_\")] = point[key];\n    });\n    return data\n  }\n\n  applyFilter(filterValue: string) {\n    console.log(filterValue)\n    console.log(this.dataSource);\n    // console.log(this.dataSource[name])\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name,row){\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {}\n  }\n\n\n  viewdata(data1:any){\n    let data:any;\n    data=data1;\n    let data2:any=[];\n    console.log('data');\n    console.log(data);\n\n      for (let key in data) {\n        let flagk:any='';\n          if (data.hasOwnProperty(key)) {\n              console.log(key + \" -> \" + data[key]+\"--->\"+typeof (data[key]));\n              if(typeof (data[key])=='boolean') {\n                  if(data[key]==true) data[key]='Yes';\n                  if(data[key]==false) data[key]='No';\n              }\n\n              if(typeof (data[key])=='object') {\n                  let tempdata:any=[];\n                  for(let k in data[key]){\n                      console.log('key');\n                      console.log(key);\n                      console.log(this.detail_datatypeval);\n                      for(let p in this.detail_datatypeval){\n                          console.log('p');\n                          console.log(p);\n                          console.log(key);\n                          console.log(data[key][k]);\n                          if(this.detail_datatypeval[p].key==key && this.detail_datatypeval[p].value=='image'){\n\n                              let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k].replace(/'/g, '');\n                              console.log('imgval');\n                              console.log('imgval');\n                              console.log(imgval);\n                              console.log(data[key][k].replace(/'/g, ''));\n                              tempdata.push(\"<img mat-card-image src=\"+imgval+\"><br/>\");\n                             // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n                          }\n                          if(this.detail_datatypeval[p].key==key && this.detail_datatypeval[p].value!='image'){\n                              //tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                              tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\");\n\n\n                          }\n                      }\n\n                  }\n                  data[key]=tempdata;\n              }\n          }\n      }\n\n      console.log('data');\n      console.log(data);\n      for(let n in data){\n        if(data[n]!=null && data[n]!=''){\n          data2[n]=data[n];\n        }\n      }\n\n    for(let v in this.detail_skip_arrayval){\n      //data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n      console.log('this.detail_skip_arrayval[v]');\n      console.log(this.detail_skip_arrayval[v]);\n    }\n      let res = Object.entries(data2);\n    console.log('this.detail_skip_array');\n    console.log(this.detail_skip_arrayval);\n    console.log(this.detail_datatypeval);\n\n    console.log('res');\n    console.log(res);\n\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: 'custom-modalbox',\n      data: {isconfirmation:false,data:res}\n    });\n\n  }\n  managestatus(data:any){\n    console.log('data');\n    console.log(data);\n    let bs=this.bottomSheet.open(BottomSheet,{panelClass: 'custom-bottomsheet',data:{items:this.statusarrval}});\n\n    bs.afterDismissed().subscribe(result => {\n      console.log('The bottom sheet was closed');\n      console.log(result);\n      if(result!=null){\n        data.status = result.val;\n        data.id = data._id;\n      this._apiService.togglestatus(this.apiurlval + 'statusupdate', data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.status == 'success') {\n          for (let c in this.olddata) {\n            //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            if (this.olddata[c]._id == data._id) {\n              console.log('in data update');\n              console.log(data);\n              this.olddata[c].status = data.status;\n            }\n          }\n          this.dataSource = new MatTableDataSource(this.olddata);\n          this.selection = new SelectionModel(true, []);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          let dialogRef = this.dialog.open(Confirmdialog, {\n            panelClass: 'custom-modalbox',\n            data: {message: 'Status updated successfully!!', isconfirmation: false}\n          });\n\n        }\n\n      }, error => {\n        console.log('Oooops!');\n      });\n    }\n      //this.animal = result;\n    });\n\n  }\n\n  managestatusmultiple(){\n\n    let ids:any=[];\n    let c:any;\n    for(c in this.selection.selected){\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    console.log('ids');\n    console.log(ids);\n    //console.log('data');\n    //console.log(data);\n    let bs=this.bottomSheet.open(BottomSheet,{data:{items:this.statusarrval}});\n\n    bs.afterDismissed().subscribe(result => {\n      console.log('The bottom sheet was closed');\n      console.log(result);\n      if(result!=null){\n        //data.status = result.val;\n        //data.id = data._id;\n        let newstatus:any=result.val;\n      this._apiService.togglestatusmany(this.apiurlval + 'statusupdate', ids,result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.status == 'success') {\n          for (let c in this.olddata) {\n            //this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            if (ids.indexOf(this.olddata[c]._id)>-1) {\n              console.log('in data update');\n              //console.log(data);\n              this.olddata[c].status = newstatus;\n            }\n          }\n          this.dataSource = new MatTableDataSource(this.olddata);\n          this.selection = new SelectionModel(true, []);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n\n          let dialogRef = this.dialog.open(Confirmdialog, {\n            panelClass: 'custom-modalbox',\n            data: {message: 'Status updated successfully!!', isconfirmation: false}\n          });\n\n        }\n\n      }, error => {\n        console.log('Oooops!');\n      });\n    }\n      //this.animal = result;\n    });\n\n  }\n\n  deletemultiple(){\n    console.log('this.selection.selected.length');\n    console.log(this.selection.selected.length);\n    console.log(this.selection);\n    console.log(this.selection.selected);\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      data: {message: 'Are you sure to delete selected records ??'}\n    });\n    let ids:any=[];\n    let c:any;\n    for(c in this.selection.selected){\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    console.log('ids');\n    console.log(ids);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if(result=='yes'){\n        this._apiService.deteManyData(this.apiurlval+this.deleteendpointval,ids,this.jwttokenval,this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if(result.status=='success'){\n            for(let c in ids){\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            console.log('this.olddata');\n            console.log(this.olddata);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: {message: 'Are you sure to delete this record ??',isconfirmation:false}\n            });\n\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n\n      }\n      //this.animal = result;\n    });\n  }\n  deletedata(data:any){\n    //alert(5);\n    //this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    console.log('data 889 ---');\n    console.log(data);\n    console.log('jwttokenval');\n    console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: 'custom-modalbox',\n      height: 'auto',\n      data: {message: 'Are you sure to delete this record ??'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if(result=='yes'){\n        this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval,this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if(result.status=='success'){\n            console.log('this.olddata');\n            console.log(this.olddata);\n            console.log(this.olddata._id);\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id)\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            let dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: 'custom-modalbox',\n              data: {message: 'Record  deleted successfully !!',isconfirmation:false}\n            });\n          }\n\n        }, error => {\n          console.log('Oooops!');\n        });\n\n      }\n      //this.animal = result;\n    });\n\n  }\n\n editdata(data:any){\n    console.log('data');\n    console.log(data);\n    console.log(this.editrouteval);\n    console.log(this.editrouteval+data._id);\n    console.log(this.jwttokenval);\n   this.router.navigate([this.editrouteval,data._id]);\n    //this.na\n\n\n  }\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n      public dialogRef: MatDialogRef<Confirmdialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any) {\n    console.log('my data ...');\n    console.log(this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>,@Inject(MAT_BOTTOM_SHEET_DATA) public data:any) {}\n\n  openLink(val:any): void {\n    console.log('bottomsheet data');\n    console.log(val);\n    this.bottomSheetRef.dismiss(val);\n    //event.preventDefault();\n  }\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog,BottomSheet} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\n//import { FooterComponent } from './footer/footer.component';\n//import { MyfromComponent } from './myfrom/myfrom.component';\n//import {DynamicFieldDirective} from \"./myfrom/dynamic-field.directive\";\nimport { MatFileUploadModule } from 'angular-material-fileupload';\nimport {NgxUploaderModule} from \"ngx-uploader\";\nimport {RouterModule} from \"@angular/router\";\n// import { FieldConfig } from './myfrom/field.interface';\n// import { DynamicFieldDirective } from './myfrom/dynamic-field.directive';\n// import { DynamicFormBuilderComponent } from '../lib/dynamic-form-builder/dynamic-form-builder.component';\n/*\nimport { FieldBuilderComponent } from '../lib/dynamic-form-builder/field-builder/field-builder.component';\nimport { TextBoxComponent } from '../lib/dynamic-form-builder/atoms/textbox';\nimport { DropDownComponent } from '../lib/dynamic-form-builder/atoms/dropdown';\nimport { FileComponent } from '../lib/dynamic-form-builder/atoms/file';\nimport { CheckBoxComponent } from '../lib/dynamic-form-builder/atoms/checkbox';\nimport { RadioComponent } from '../lib/dynamic-form-builder/atoms/radio';\n*/\nimport { MomentModule } from 'ngx-moment';\n\n\n\n@NgModule({\n  declarations: [ListingComponent,Confirmdialog,BottomSheet,\n  /*  FieldBuilderComponent,\n    TextBoxComponent,\n    DropDownComponent,\n    CheckBoxComponent,\n    FileComponent,\n    RadioComponent*/],\n    imports: [\n        CommonModule,\n        BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        MatFileUploadModule, NgxUploaderModule, RouterModule,\n        MomentModule\n        // DynamicFieldDirective,\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  exports: [ListingComponent,\n      //MyfromComponent,\n      NgxUploaderModule],\n  providers: [ApiService],\n  entryComponents:[Confirmdialog,BottomSheet],\n})\nexport class ListingModule {\n  // field: FieldConfig;\n  // group: FormGroup;\n\n}\n"]}